# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and release TabFS for Linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [15.x]

    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Install libfuse-dev
        run: sudo apt-get install libfuse-dev

      - name: Compile C Extension
        run: cd fs && make

      - name: Load Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Web-ext
        run: npm install --global web-ext
      
      - name: Build browser extension
        run: web-ext build -s extension -n tabfs.zip
      
      - name: Create tarball
        run: tar -cvf tabfs-filesystem.tar fs/tabfs install.sh

      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: dev/${{ steps.vars.outputs.sha_short }}
          release_name: 'Development Release #${{ steps.vars.outputs.sha_short }}'
          draft: false
          prerelease: true
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./tabfs-filesystem.tar
          asset_name: tabfs-filesystem.tar
          asset_content_type: application/x-tar
          
      - name: Upload Release Asset 2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./web-ext-artifacts/tabfs.zip
          asset_name: tabfs-web-extension.tar
          asset_content_type: application/zip
